What is it?
===========

ABCpy is a scientific library for approaximate Bayesian computation (ABC)
written in Python. It addresses the needs of domain scientists *and* data
scientists by providing
 * a fully modularized framework that is easy to use and easy to extend, and 
 * a non-intrusive, user-friendly way to parallelize inference computations


Main Features
=============

Installation
============

If you prefer to work on the source, clone the repository
::
   git clone https://github.com/eth-cscs/abcpy.git

Make sure all requirements are installed
::
   cd abcpy
   pip3 install -r requirements.txt

To create a package and install it do
::
   make package
   pip3 install pip3 install build/dist/abcpy-0.1-py3-none-any.whl

Note that ABCpy requires Python3.

Getting Started
===============

Here we show how to use ABCpy to infer parameters of model, given observed some
data. As a simple example we consider a Gaussian model, where we want to model
the height of grown up humans given the following set of measurement
(observation, observed data).

.. literalinclude:: ../../examples/gaussian.py
    :language: python
    :lines: 4

Now, we want to model the height of humans by a Gaussian model which has
parameters mean, denoted by :math:`\mu`, and standard deviation, denoted by
:math:`\sigma`. The goal is to use ABC to infer these yet unknown parameters
from the information contained in the observed data.

A pre-requisite for ABC is that we provide certain *prior* knowledge about the
parameters we want to infer. In our case it is quite simple, we know from
experience that the average height should be somewhere between 150cm and 200cm,
and the standard deviation is around 5 to 25.

.. literalinclude:: ../../examples/gaussian.py
    :language: python
    :lines: 7-9, 11-12

Further, we need a means to quantify how close our observation is to synthetic
data (generated by the model). Often the real and synthetic observations cannot
compared directly in a reasonable of efficient way. Thus, *summary statistics*
are used to extract relevant properties from the observations, with the idea the
these stastistics then compared.

.. literalinclude:: ../../examples/gaussian.py
    :language: python
    :lines: 15-16

As a distance we chose the LogReg distance here. Note that in ABCpy distance
functions operate not on the observations, but on summary statistice.

.. literalinclude:: ../../examples/gaussian.py
    :language: python
    :lines: 19-20

We can now setup a inference scheme -- let us chose PMCABC as our inference
algorithm of choice. As a pre-requisit it requires a perturbation kernel and a
backend. We define both in the following:

.. literalinclude:: ../../examples/gaussian.py
    :language: python
    :lines: 23-26, 29-30

We instanciate an PMCABC object and pass the kernel and backend objects to the
constructor:

.. literalinclude:: ../../examples/gaussian.py
    :language: python
    :lines: 33-34

Finally, we need to parametrize and start the actualy sampling:

.. literalinclude:: ../../examples/gaussian.py
    :language: python
    :lines: 37-40

The full source can be found `here <../../../examples/gaussian.py>`_

Visualizing Results
===================
TBD

Extending
=========
TBD

License
=======
ABCpy is published under the BSD 3-clause license

Contributors
============
| Ritabrata Dutta, University of Lugano 
| Marcel Schoengens, CSCS, ETH Zurich 



